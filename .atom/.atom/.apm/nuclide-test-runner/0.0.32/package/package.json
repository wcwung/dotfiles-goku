{"consumedServices":{"nuclide-test-runner.provider":{"versions":{"0.0.0":"consumeTestRunner"}}},"dependencies":{"immutable":"3.6.2","nuclide-analytics":"0.0.32","nuclide-atom-helpers":"0.0.32","nuclide-commons":"0.0.32","nuclide-logging":"0.0.32","nuclide-panel":"0.0.32","nuclide-ui-atom-text-editor":"0.0.32","nuclide-ui-dropdown":"0.0.32","nuclide-ui-tree":"0.0.32","react-for-atom":"0.13.6"},"description":"A panel for running tests provided by test runner service packages","devDependencies":{"nuclide-external-interfaces":"0.0.32"},"engines":{"atom":">=1.0.9"},"license":"SEE LICENSE IN LICENSE","main":"./lib/main","name":"nuclide-test-runner","nuclide":{"packageType":"Atom","testRunner":"apm"},"repository":{"type":"git","url":"git+https://github.com/facebooknuclideapm/nuclide-test-runner.git"},"version":"0.0.32","readme":"**NOTE:** The official repository for this package is https://github.com/facebook/nuclide.\nPlease file all issues and pull requests there.\n\n# Test Runner\n\nA panel for running tests provided by test runner service packages\n\n### Writing and registering a test runner\n\nTest runners asynchronously run tests remotely or locally and emit events when tests are run.\n\n#### Provide a test runner\n\nTest runner implementations should implement the interface found in\n\"[./example/TestRunnerInterface.js](./examples/TestRunnerInterface.js)\".\nThey do not need to actually extend that class, only match its methods.\n\n**main.js:**\n\n```javascript\nmodule.exports = {\n  provideTestRunner() {\n    return {\n      getByUri(uri: string): TestRunnerInterface {\n        // Return the runner that will do the work for the given URI. Objects returned by this\n        // function should implement the interface in example/TestRunnerInterface.js but do not need\n        // to actually extend that class.\n        return new TestRunnerImpl(uri);\n      },\n      // Used to identify this runner in the testing panel to allow users to select the correct\n      // runner for a given test.\n      label: 'My Little Test Runner',\n    }\n  },\n};\n```\n\n**package.json:**\n\n```json\n{\n  \"//\": \"Expose the test provider via 'nuclide-test-runner.provider'\",\n  \"providedServices\": {\n    \"nuclide-test-runner.provider\": {\n      \"versions\": {\n        \"0.0.0\": \"provideTestRunner\"\n      }\n    }\n  }\n}\n```\n\n#### Testing lifecycle\n\n1. `run` is called on a test runner\n2. Test runner calls `onDidStart`\n3. Test runner calls any or none of its output methods:\n  * `onDidRunSummary` (max: 1 time) prior to running tests with an overview of the test classes it\n    will run\n  * `onDidRunTest` (max: none) after a test is run with an object describing the test\n  * `onStdoutData` (max: none) with unstructured stdout data that does not fit in `onDidRunTest`\n  * `onStderrData` (max: none) with unstructured stderr data\n  * `onError` (max: 1 time) when an unrecoverable error occurs; further output is ignored\n4. Test runner calls `onDidEnd`\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/facebooknuclideapm/nuclide-test-runner/issues"},"homepage":"https://github.com/facebooknuclideapm/nuclide-test-runner#readme","_id":"nuclide-test-runner@0.0.32","_shasum":"ec3339e230ca9bd6bb7cdd2500982be163d6dedf","_resolved":"file:../d-115825-45544-v1ntz2/package.tgz","_from":"../d-115825-45544-v1ntz2/package.tgz"}